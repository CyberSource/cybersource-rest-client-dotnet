/* 
 * CyberSource Merged Spec
 *
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using CyberSource.Client;
using CyberSource.Api;
using CyberSource.Model;

namespace CyberSource.Test
{
    /// <summary>
    ///  Class for testing PlansApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class PlansApiTests
    {
        private PlansApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PlansApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PlansApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PlansApi
            //Assert.IsInstanceOfType(typeof(PlansApi), instance, "instance is a PlansApi");
        }

        
        /// <summary>
        /// Test ActivatePlan
        /// </summary>
        [Test]
        public void ActivatePlanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.ActivatePlan(id);
            //Assert.IsInstanceOf<ActivateDeactivatePlanResponse> (response, "response is ActivateDeactivatePlanResponse");
        }
        
        /// <summary>
        /// Test CreatePlan
        /// </summary>
        [Test]
        public void CreatePlanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreatePlanRequest createPlanRequest = null;
            //var response = instance.CreatePlan(createPlanRequest);
            //Assert.IsInstanceOf<CreatePlanResponse> (response, "response is CreatePlanResponse");
        }
        
        /// <summary>
        /// Test DeactivatePlan
        /// </summary>
        [Test]
        public void DeactivatePlanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.DeactivatePlan(id);
            //Assert.IsInstanceOf<ActivateDeactivatePlanResponse> (response, "response is ActivateDeactivatePlanResponse");
        }
        
        /// <summary>
        /// Test DeletePlan
        /// </summary>
        [Test]
        public void DeletePlanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.DeletePlan(id);
            //Assert.IsInstanceOf<DeletePlanResponse> (response, "response is DeletePlanResponse");
        }
        
        /// <summary>
        /// Test GetPlan
        /// </summary>
        [Test]
        public void GetPlanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetPlan(id);
            //Assert.IsInstanceOf<GetPlanResponse> (response, "response is GetPlanResponse");
        }
        
        /// <summary>
        /// Test GetPlanCode
        /// </summary>
        [Test]
        public void GetPlanCodeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetPlanCode();
            //Assert.IsInstanceOf<GetPlanCodeResponse> (response, "response is GetPlanCodeResponse");
        }
        
        /// <summary>
        /// Test GetPlans
        /// </summary>
        [Test]
        public void GetPlansTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? offset = null;
            //int? limit = null;
            //string code = null;
            //string status = null;
            //string name = null;
            //var response = instance.GetPlans(offset, limit, code, status, name);
            //Assert.IsInstanceOf<GetAllPlansResponse> (response, "response is GetAllPlansResponse");
        }
        
        /// <summary>
        /// Test UpdatePlan
        /// </summary>
        [Test]
        public void UpdatePlanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //UpdatePlanRequest updatePlanRequest = null;
            //var response = instance.UpdatePlan(id, updatePlanRequest);
            //Assert.IsInstanceOf<UpdatePlanResponse> (response, "response is UpdatePlanResponse");
        }
        
    }

}
