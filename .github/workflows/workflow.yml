name: DOTNET BUILDS
on:
  push:
  pull_request:
  workflow_dispatch:
env:
  CLIENT_FOLDER: 'cybersource-rest-client-dotnet'
  SAMPLE_FOLDER: 'cybersource-rest-samples-csharp'
jobs:
    workflow-job:
        defaults:
            run:
              shell: bash
        strategy:
            fail-fast: false
            matrix:
              operating-system: [windows-latest]
        runs-on: ${{matrix.operating-system}}
        steps:
            - name: Creating separate folders for checkout repos
              run: |
                rm -rf $CLIENT_FOLDER
                rm -rf $SAMPLE_FOLDER
                mkdir $CLIENT_FOLDER $SAMPLE_FOLDER
            - name: Checkout cybersource-rest-client-dotnet repo
              uses: actions/checkout@v4
              with:
                path: ${{env.CLIENT_FOLDER}}
            - name: Checkout cybersource-rest-samples-csharp repo
              uses: actions/checkout@v4
              with:
                repository: 'CyberSource/cybersource-rest-samples-csharp'
                ref: 'testing-branch' # this is used for checking out a particular branch in repo
                path: ${{env.SAMPLE_FOLDER}}
            - name: Building the projects and running the Test Cases
              run: |
                Get-Location
                Get-ChildItem
                cd $Env:CLIENT_FOLDER
                (Get-Content ./cybersource-rest-client-dotnet.csproj) | ForEach-Object { $_ -replace "(<HintPath>)(.)+(AuthenticationSdk.dll</HintPath>)", "<HintPath>..\\cybersource-rest-auth-dotnet\\AuthenticationSdk\\AuthenticationSdk\\bin\\Release\\AuthenticationSdk.dll</HintPath>" } | Set-Content ./cybersource-rest-client-dotnet.csproj
                nuget install packages.config -OutputDirectory packages
                nuget install ./test/packages.config -OutputDirectory packages
                Write-Output "Passed!!!"
                msbuild -version
                msbuild -property:Configuration=Release "cybersource-rest-client-dotnet.sln"
              shell: pwsh 
            # - name: Setup Python v3.12 for report generation only
            #   uses: actions/setup-python@v5
            #   with:
            #     python-version: 3.12
            # - name: Installing required python libraries and running the python programs to generate pdf report
            #   run : |
            #     echo $VIRTUAL_ENV
            #     echo "Before Running Report Generation"
            #     echo "PWD"
            #     pwd
            #     cd $SAMPLE_FOLDER
            #     python -m pip install --upgrade pip
            #     pip install json2html
            #     pip install xhtml2pdf
            #     pip install bs4
            #     cd Validation
            #     python sample_code_log_processor.py -l ../../$SAMPLE_FOLDER/output.log -o ../../$SAMPLE_FOLDER/python_actual_results.json
            #     python response_code_validator.py -e ExpectedResults/python_expected_results.json -a ../../$SAMPLE_FOLDER/python_actual_results.json -o python_validation_results.json
            #     python json_to_prettified_html.py -i python_validation_results.json -o python_validation_results.html
            #     cp python_validation_results.pdf ../  #copying the file to flaatten the directory of the upload artifact,Github Actions doesn't support that as of jun 2024
            # - name: Upload Test Reports
            #   uses: actions/upload-artifact@v4
            #   with:
            #     name: log-files-${{matrix.operating-system}}-python-ver-${{matrix.pyth-version}}
            #     path: |
            #       ${{env.SAMPLE_FOLDER}}/python_validation_results.pdf
