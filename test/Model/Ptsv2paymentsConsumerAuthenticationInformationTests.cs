/* 
 * CyberSource Merged Spec
 *
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CyberSource.Api;
using CyberSource.Model;
using CyberSource.Client;
using System.Reflection;

namespace CyberSource.Test
{
    /// <summary>
    ///  Class for testing Ptsv2paymentsConsumerAuthenticationInformation
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class Ptsv2paymentsConsumerAuthenticationInformationTests
    {
        // TODO uncomment below to declare an instance variable for Ptsv2paymentsConsumerAuthenticationInformation
        //private Ptsv2paymentsConsumerAuthenticationInformation instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Ptsv2paymentsConsumerAuthenticationInformation
            //instance = new Ptsv2paymentsConsumerAuthenticationInformation();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Ptsv2paymentsConsumerAuthenticationInformation
        /// </summary>
        [Test]
        public void Ptsv2paymentsConsumerAuthenticationInformationInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Ptsv2paymentsConsumerAuthenticationInformation
            //Assert.IsInstanceOfType<Ptsv2paymentsConsumerAuthenticationInformation> (instance, "variable 'instance' is a Ptsv2paymentsConsumerAuthenticationInformation");
        }

        /// <summary>
        /// Test the property 'Cavv'
        /// </summary>
        [Test]
        public void CavvTest()
        {
            // TODO unit test for the property 'Cavv'
        }
        /// <summary>
        /// Test the property 'CavvAlgorithm'
        /// </summary>
        [Test]
        public void CavvAlgorithmTest()
        {
            // TODO unit test for the property 'CavvAlgorithm'
        }
        /// <summary>
        /// Test the property 'EciRaw'
        /// </summary>
        [Test]
        public void EciRawTest()
        {
            // TODO unit test for the property 'EciRaw'
        }
        /// <summary>
        /// Test the property 'ParesStatus'
        /// </summary>
        [Test]
        public void ParesStatusTest()
        {
            // TODO unit test for the property 'ParesStatus'
        }
        /// <summary>
        /// Test the property 'VeresEnrolled'
        /// </summary>
        [Test]
        public void VeresEnrolledTest()
        {
            // TODO unit test for the property 'VeresEnrolled'
        }
        /// <summary>
        /// Test the property 'Xid'
        /// </summary>
        [Test]
        public void XidTest()
        {
            // TODO unit test for the property 'Xid'
        }
        /// <summary>
        /// Test the property 'UcafCollectionIndicator'
        /// </summary>
        [Test]
        public void UcafCollectionIndicatorTest()
        {
            // TODO unit test for the property 'UcafCollectionIndicator'
        }
        /// <summary>
        /// Test the property 'UcafAuthenticationData'
        /// </summary>
        [Test]
        public void UcafAuthenticationDataTest()
        {
            // TODO unit test for the property 'UcafAuthenticationData'
        }
        /// <summary>
        /// Test the property 'StrongAuthentication'
        /// </summary>
        [Test]
        public void StrongAuthenticationTest()
        {
            // TODO unit test for the property 'StrongAuthentication'
        }
        /// <summary>
        /// Test the property 'DirectoryServerTransactionId'
        /// </summary>
        [Test]
        public void DirectoryServerTransactionIdTest()
        {
            // TODO unit test for the property 'DirectoryServerTransactionId'
        }
        /// <summary>
        /// Test the property 'PaSpecificationVersion'
        /// </summary>
        [Test]
        public void PaSpecificationVersionTest()
        {
            // TODO unit test for the property 'PaSpecificationVersion'
        }
        /// <summary>
        /// Test the property 'AuthenticationType'
        /// </summary>
        [Test]
        public void AuthenticationTypeTest()
        {
            // TODO unit test for the property 'AuthenticationType'
        }
        /// <summary>
        /// Test the property 'AcsTransactionId'
        /// </summary>
        [Test]
        public void AcsTransactionIdTest()
        {
            // TODO unit test for the property 'AcsTransactionId'
        }
        /// <summary>
        /// Test the property 'AcsWindowSize'
        /// </summary>
        [Test]
        public void AcsWindowSizeTest()
        {
            // TODO unit test for the property 'AcsWindowSize'
        }
        /// <summary>
        /// Test the property 'AlternateAuthenticationData'
        /// </summary>
        [Test]
        public void AlternateAuthenticationDataTest()
        {
            // TODO unit test for the property 'AlternateAuthenticationData'
        }
        /// <summary>
        /// Test the property 'AlternateAuthenticationDate'
        /// </summary>
        [Test]
        public void AlternateAuthenticationDateTest()
        {
            // TODO unit test for the property 'AlternateAuthenticationDate'
        }
        /// <summary>
        /// Test the property 'AlternateAuthenticationMethod'
        /// </summary>
        [Test]
        public void AlternateAuthenticationMethodTest()
        {
            // TODO unit test for the property 'AlternateAuthenticationMethod'
        }
        /// <summary>
        /// Test the property 'AuthenticationDate'
        /// </summary>
        [Test]
        public void AuthenticationDateTest()
        {
            // TODO unit test for the property 'AuthenticationDate'
        }
        /// <summary>
        /// Test the property 'AuthenticationTransactionId'
        /// </summary>
        [Test]
        public void AuthenticationTransactionIdTest()
        {
            // TODO unit test for the property 'AuthenticationTransactionId'
        }
        /// <summary>
        /// Test the property 'ChallengeCancelCode'
        /// </summary>
        [Test]
        public void ChallengeCancelCodeTest()
        {
            // TODO unit test for the property 'ChallengeCancelCode'
        }
        /// <summary>
        /// Test the property 'ChallengeCode'
        /// </summary>
        [Test]
        public void ChallengeCodeTest()
        {
            // TODO unit test for the property 'ChallengeCode'
        }
        /// <summary>
        /// Test the property 'ChallengeStatus'
        /// </summary>
        [Test]
        public void ChallengeStatusTest()
        {
            // TODO unit test for the property 'ChallengeStatus'
        }
        /// <summary>
        /// Test the property 'CustomerCardAlias'
        /// </summary>
        [Test]
        public void CustomerCardAliasTest()
        {
            // TODO unit test for the property 'CustomerCardAlias'
        }
        /// <summary>
        /// Test the property 'DecoupledAuthenticationIndicator'
        /// </summary>
        [Test]
        public void DecoupledAuthenticationIndicatorTest()
        {
            // TODO unit test for the property 'DecoupledAuthenticationIndicator'
        }
        /// <summary>
        /// Test the property 'DecoupledAuthenticationMaxTime'
        /// </summary>
        [Test]
        public void DecoupledAuthenticationMaxTimeTest()
        {
            // TODO unit test for the property 'DecoupledAuthenticationMaxTime'
        }
        /// <summary>
        /// Test the property 'DefaultCard'
        /// </summary>
        [Test]
        public void DefaultCardTest()
        {
            // TODO unit test for the property 'DefaultCard'
        }
        /// <summary>
        /// Test the property 'DeviceChannel'
        /// </summary>
        [Test]
        public void DeviceChannelTest()
        {
            // TODO unit test for the property 'DeviceChannel'
        }
        /// <summary>
        /// Test the property 'InstallmentTotalCount'
        /// </summary>
        [Test]
        public void InstallmentTotalCountTest()
        {
            // TODO unit test for the property 'InstallmentTotalCount'
        }
        /// <summary>
        /// Test the property 'MerchantFraudRate'
        /// </summary>
        [Test]
        public void MerchantFraudRateTest()
        {
            // TODO unit test for the property 'MerchantFraudRate'
        }
        /// <summary>
        /// Test the property 'MarketingOptIn'
        /// </summary>
        [Test]
        public void MarketingOptInTest()
        {
            // TODO unit test for the property 'MarketingOptIn'
        }
        /// <summary>
        /// Test the property 'MarketingSource'
        /// </summary>
        [Test]
        public void MarketingSourceTest()
        {
            // TODO unit test for the property 'MarketingSource'
        }
        /// <summary>
        /// Test the property 'Mcc'
        /// </summary>
        [Test]
        public void MccTest()
        {
            // TODO unit test for the property 'Mcc'
        }
        /// <summary>
        /// Test the property 'MerchantScore'
        /// </summary>
        [Test]
        public void MerchantScoreTest()
        {
            // TODO unit test for the property 'MerchantScore'
        }
        /// <summary>
        /// Test the property 'MessageCategory'
        /// </summary>
        [Test]
        public void MessageCategoryTest()
        {
            // TODO unit test for the property 'MessageCategory'
        }
        /// <summary>
        /// Test the property 'NetworkScore'
        /// </summary>
        [Test]
        public void NetworkScoreTest()
        {
            // TODO unit test for the property 'NetworkScore'
        }
        /// <summary>
        /// Test the property 'NpaCode'
        /// </summary>
        [Test]
        public void NpaCodeTest()
        {
            // TODO unit test for the property 'NpaCode'
        }
        /// <summary>
        /// Test the property 'OverridePaymentMethod'
        /// </summary>
        [Test]
        public void OverridePaymentMethodTest()
        {
            // TODO unit test for the property 'OverridePaymentMethod'
        }
        /// <summary>
        /// Test the property 'OverrideCountryCode'
        /// </summary>
        [Test]
        public void OverrideCountryCodeTest()
        {
            // TODO unit test for the property 'OverrideCountryCode'
        }
        /// <summary>
        /// Test the property 'PriorAuthenticationData'
        /// </summary>
        [Test]
        public void PriorAuthenticationDataTest()
        {
            // TODO unit test for the property 'PriorAuthenticationData'
        }
        /// <summary>
        /// Test the property 'PriorAuthenticationMethod'
        /// </summary>
        [Test]
        public void PriorAuthenticationMethodTest()
        {
            // TODO unit test for the property 'PriorAuthenticationMethod'
        }
        /// <summary>
        /// Test the property 'PriorAuthenticationReferenceId'
        /// </summary>
        [Test]
        public void PriorAuthenticationReferenceIdTest()
        {
            // TODO unit test for the property 'PriorAuthenticationReferenceId'
        }
        /// <summary>
        /// Test the property 'PriorAuthenticationTime'
        /// </summary>
        [Test]
        public void PriorAuthenticationTimeTest()
        {
            // TODO unit test for the property 'PriorAuthenticationTime'
        }
        /// <summary>
        /// Test the property 'ProductCode'
        /// </summary>
        [Test]
        public void ProductCodeTest()
        {
            // TODO unit test for the property 'ProductCode'
        }
        /// <summary>
        /// Test the property 'RequestorId'
        /// </summary>
        [Test]
        public void RequestorIdTest()
        {
            // TODO unit test for the property 'RequestorId'
        }
        /// <summary>
        /// Test the property 'RequestorInitiatedAuthenticationIndicator'
        /// </summary>
        [Test]
        public void RequestorInitiatedAuthenticationIndicatorTest()
        {
            // TODO unit test for the property 'RequestorInitiatedAuthenticationIndicator'
        }
        /// <summary>
        /// Test the property 'RequestorName'
        /// </summary>
        [Test]
        public void RequestorNameTest()
        {
            // TODO unit test for the property 'RequestorName'
        }
        /// <summary>
        /// Test the property 'ReferenceId'
        /// </summary>
        [Test]
        public void ReferenceIdTest()
        {
            // TODO unit test for the property 'ReferenceId'
        }
        /// <summary>
        /// Test the property 'SdkMaxTimeout'
        /// </summary>
        [Test]
        public void SdkMaxTimeoutTest()
        {
            // TODO unit test for the property 'SdkMaxTimeout'
        }
        /// <summary>
        /// Test the property 'SecureCorporatePaymentIndicator'
        /// </summary>
        [Test]
        public void SecureCorporatePaymentIndicatorTest()
        {
            // TODO unit test for the property 'SecureCorporatePaymentIndicator'
        }
        /// <summary>
        /// Test the property 'TransactionMode'
        /// </summary>
        [Test]
        public void TransactionModeTest()
        {
            // TODO unit test for the property 'TransactionMode'
        }
        /// <summary>
        /// Test the property 'WhiteListStatus'
        /// </summary>
        [Test]
        public void WhiteListStatusTest()
        {
            // TODO unit test for the property 'WhiteListStatus'
        }
        /// <summary>
        /// Test the property 'EffectiveAuthenticationType'
        /// </summary>
        [Test]
        public void EffectiveAuthenticationTypeTest()
        {
            // TODO unit test for the property 'EffectiveAuthenticationType'
        }
        /// <summary>
        /// Test the property 'SignedParesStatusReason'
        /// </summary>
        [Test]
        public void SignedParesStatusReasonTest()
        {
            // TODO unit test for the property 'SignedParesStatusReason'
        }
        /// <summary>
        /// Test the property 'SignedPares'
        /// </summary>
        [Test]
        public void SignedParesTest()
        {
            // TODO unit test for the property 'SignedPares'
        }

    }

}
