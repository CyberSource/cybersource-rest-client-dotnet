/* 
 * CyberSource Merged Spec
 *
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = CyberSource.Client.SwaggerDateConverter;

namespace CyberSource.Model
{
    /// <summary>
    /// Ptsv2paymentsidcapturesInstallmentInformation
    /// </summary>
    [DataContract]
    public partial class Ptsv2paymentsidcapturesInstallmentInformation :  IEquatable<Ptsv2paymentsidcapturesInstallmentInformation>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Ptsv2paymentsidcapturesInstallmentInformation" /> class.
        /// </summary>
        /// <param name="FirstInstallmentDate">Date of the first installment payment. Format: YYMMDD. When you do not include this field, CyberSource sends a string of six zeros (000000) to the processor. See Installment Payments on CyberSource through VisaNet.  This field is supported only for Crediario installment payments in Brazil on CyberSource through VisaNet.  The value for this field corresponds to the following data in the TC 33 capture file5: - Record: CP01 TCR9 - Position: 42-47 - Field: Date of First Installment .</param>
        /// <param name="InvoiceData">Invoice information that you want to provide to the issuer. This value is similar to a tracking number and is the same for all installment payments for one purchase.  This field is supported only for installment payments with Mastercard on CyberSource through VisaNet in Brazil.  See Installment Payments on CyberSource through VisaNet.  The value for this field corresponds to the following data in the TC 33 capture file5: - Record: CP07 TCR4 - Position: 51-70 - Field: Purchase Identification .</param>
        /// <param name="PaymentType">Payment plan for the installments.  Possible values: - 0 (default): Regular installment. This value is not allowed for airline transactions. - 1: Installment payment with down payment. - 2: Installment payment without down payment. This value is supported only for airline transactions. - 3: Installment payment; down payment and boarding fee will follow. This value is supported only for airline transactions. - 4: Down payment only; regular installment payment will follow. - 5: Boarding fee only. This value is supported only for airline transactions.  This field is supported only for installment payments with Visa on CyberSource through VisaNet in Brazil.  See Installment Payments on CyberSource through VisaNet.  The value for this field corresponds to the following data in the TC 33 capture file5: - Record: CP07 TCR1 - Position: 9 - Field: Merchant Installment Supporting Information .</param>
        /// <param name="AdditionalCosts">Additional costs charged by the issuer to fund the installment payments.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 128-139 - Field: Total Other Costs .</param>
        /// <param name="AdditionalCostsPercentage">Additional costs divided by the amount funded.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 140-143 - Field: Percent of Total Other Costs .</param>
        /// <param name="AmountFunded">Amount funded.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 48-59 - Field: Total Amount Funded .</param>
        /// <param name="AmountRequestedPercentage">Amount requested divided by the amount funded.  For example: - A value of 90.0 specifies 90%. - A value of 93.7 specifies 93.7%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 60-63 - Field: Percent of Amount Requested .</param>
        /// <param name="AnnualFinancingCost">Annual cost of financing the installment payments.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 158-164 - Field: Annual Total Cost of Financing .</param>
        /// <param name="AnnualInterestRate">Annual interest rate.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 151-157 - Field: Annual Interest Rate .</param>
        /// <param name="Expenses">Expenses charged by the issuer to fund the installment payments.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 64-75 - Field: Total Expenses .</param>
        /// <param name="ExpensesPercentage">Expenses divided by the amount funded.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 76-79 - Field: Percent of Total Expenses .</param>
        /// <param name="Fees">Fees charged by the issuer to fund the installment payments.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 80-91 - Field: Total Fees .</param>
        /// <param name="FeesPercentage">Fees divided by the amount funded.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for Crediario installment payments in Brazil on CyberSource through VisaNet.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 92-95 - Field: Percent of Total Fees .</param>
        /// <param name="Insurance">Insurance charged by the issuer to fund the installment payments.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 112-123 - Field: Total Insurance .</param>
        /// <param name="InsurancePercentage">Insurance costs divided by the amount funded.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 124-127 - Field: Percent Of Total Insurance .</param>
        /// <param name="MonthlyInterestRate">Monthly interest rate.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 144-150 - Field: Monthly Interest Rate .</param>
        /// <param name="Taxes">Taxes collected by the issuer to fund the installment payments.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 96-107 - Field: Total Taxes .</param>
        /// <param name="TaxesPercentage">Taxes divided by the amount funded.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 108-111 - Field: Percent of Total Taxes .</param>
        public Ptsv2paymentsidcapturesInstallmentInformation(string FirstInstallmentDate = default(string), string InvoiceData = default(string), string PaymentType = default(string), string AdditionalCosts = default(string), string AdditionalCostsPercentage = default(string), string AmountFunded = default(string), string AmountRequestedPercentage = default(string), string AnnualFinancingCost = default(string), string AnnualInterestRate = default(string), string Expenses = default(string), string ExpensesPercentage = default(string), string Fees = default(string), string FeesPercentage = default(string), string Insurance = default(string), string InsurancePercentage = default(string), string MonthlyInterestRate = default(string), string Taxes = default(string), string TaxesPercentage = default(string))
        {
            this.FirstInstallmentDate = FirstInstallmentDate;
            this.InvoiceData = InvoiceData;
            this.PaymentType = PaymentType;
            this.AdditionalCosts = AdditionalCosts;
            this.AdditionalCostsPercentage = AdditionalCostsPercentage;
            this.AmountFunded = AmountFunded;
            this.AmountRequestedPercentage = AmountRequestedPercentage;
            this.AnnualFinancingCost = AnnualFinancingCost;
            this.AnnualInterestRate = AnnualInterestRate;
            this.Expenses = Expenses;
            this.ExpensesPercentage = ExpensesPercentage;
            this.Fees = Fees;
            this.FeesPercentage = FeesPercentage;
            this.Insurance = Insurance;
            this.InsurancePercentage = InsurancePercentage;
            this.MonthlyInterestRate = MonthlyInterestRate;
            this.Taxes = Taxes;
            this.TaxesPercentage = TaxesPercentage;
        }
        
        /// <summary>
        /// Date of the first installment payment. Format: YYMMDD. When you do not include this field, CyberSource sends a string of six zeros (000000) to the processor. See Installment Payments on CyberSource through VisaNet.  This field is supported only for Crediario installment payments in Brazil on CyberSource through VisaNet.  The value for this field corresponds to the following data in the TC 33 capture file5: - Record: CP01 TCR9 - Position: 42-47 - Field: Date of First Installment 
        /// </summary>
        /// <value>Date of the first installment payment. Format: YYMMDD. When you do not include this field, CyberSource sends a string of six zeros (000000) to the processor. See Installment Payments on CyberSource through VisaNet.  This field is supported only for Crediario installment payments in Brazil on CyberSource through VisaNet.  The value for this field corresponds to the following data in the TC 33 capture file5: - Record: CP01 TCR9 - Position: 42-47 - Field: Date of First Installment </value>
        [DataMember(Name="firstInstallmentDate", EmitDefaultValue=false)]
        public string FirstInstallmentDate { get; set; }

        /// <summary>
        /// Invoice information that you want to provide to the issuer. This value is similar to a tracking number and is the same for all installment payments for one purchase.  This field is supported only for installment payments with Mastercard on CyberSource through VisaNet in Brazil.  See Installment Payments on CyberSource through VisaNet.  The value for this field corresponds to the following data in the TC 33 capture file5: - Record: CP07 TCR4 - Position: 51-70 - Field: Purchase Identification 
        /// </summary>
        /// <value>Invoice information that you want to provide to the issuer. This value is similar to a tracking number and is the same for all installment payments for one purchase.  This field is supported only for installment payments with Mastercard on CyberSource through VisaNet in Brazil.  See Installment Payments on CyberSource through VisaNet.  The value for this field corresponds to the following data in the TC 33 capture file5: - Record: CP07 TCR4 - Position: 51-70 - Field: Purchase Identification </value>
        [DataMember(Name="invoiceData", EmitDefaultValue=false)]
        public string InvoiceData { get; set; }

        /// <summary>
        /// Payment plan for the installments.  Possible values: - 0 (default): Regular installment. This value is not allowed for airline transactions. - 1: Installment payment with down payment. - 2: Installment payment without down payment. This value is supported only for airline transactions. - 3: Installment payment; down payment and boarding fee will follow. This value is supported only for airline transactions. - 4: Down payment only; regular installment payment will follow. - 5: Boarding fee only. This value is supported only for airline transactions.  This field is supported only for installment payments with Visa on CyberSource through VisaNet in Brazil.  See Installment Payments on CyberSource through VisaNet.  The value for this field corresponds to the following data in the TC 33 capture file5: - Record: CP07 TCR1 - Position: 9 - Field: Merchant Installment Supporting Information 
        /// </summary>
        /// <value>Payment plan for the installments.  Possible values: - 0 (default): Regular installment. This value is not allowed for airline transactions. - 1: Installment payment with down payment. - 2: Installment payment without down payment. This value is supported only for airline transactions. - 3: Installment payment; down payment and boarding fee will follow. This value is supported only for airline transactions. - 4: Down payment only; regular installment payment will follow. - 5: Boarding fee only. This value is supported only for airline transactions.  This field is supported only for installment payments with Visa on CyberSource through VisaNet in Brazil.  See Installment Payments on CyberSource through VisaNet.  The value for this field corresponds to the following data in the TC 33 capture file5: - Record: CP07 TCR1 - Position: 9 - Field: Merchant Installment Supporting Information </value>
        [DataMember(Name="paymentType", EmitDefaultValue=false)]
        public string PaymentType { get; set; }

        /// <summary>
        /// Additional costs charged by the issuer to fund the installment payments.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 128-139 - Field: Total Other Costs 
        /// </summary>
        /// <value>Additional costs charged by the issuer to fund the installment payments.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 128-139 - Field: Total Other Costs </value>
        [DataMember(Name="additionalCosts", EmitDefaultValue=false)]
        public string AdditionalCosts { get; set; }

        /// <summary>
        /// Additional costs divided by the amount funded.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 140-143 - Field: Percent of Total Other Costs 
        /// </summary>
        /// <value>Additional costs divided by the amount funded.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 140-143 - Field: Percent of Total Other Costs </value>
        [DataMember(Name="additionalCostsPercentage", EmitDefaultValue=false)]
        public string AdditionalCostsPercentage { get; set; }

        /// <summary>
        /// Amount funded.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 48-59 - Field: Total Amount Funded 
        /// </summary>
        /// <value>Amount funded.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 48-59 - Field: Total Amount Funded </value>
        [DataMember(Name="amountFunded", EmitDefaultValue=false)]
        public string AmountFunded { get; set; }

        /// <summary>
        /// Amount requested divided by the amount funded.  For example: - A value of 90.0 specifies 90%. - A value of 93.7 specifies 93.7%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 60-63 - Field: Percent of Amount Requested 
        /// </summary>
        /// <value>Amount requested divided by the amount funded.  For example: - A value of 90.0 specifies 90%. - A value of 93.7 specifies 93.7%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 60-63 - Field: Percent of Amount Requested </value>
        [DataMember(Name="amountRequestedPercentage", EmitDefaultValue=false)]
        public string AmountRequestedPercentage { get; set; }

        /// <summary>
        /// Annual cost of financing the installment payments.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 158-164 - Field: Annual Total Cost of Financing 
        /// </summary>
        /// <value>Annual cost of financing the installment payments.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 158-164 - Field: Annual Total Cost of Financing </value>
        [DataMember(Name="annualFinancingCost", EmitDefaultValue=false)]
        public string AnnualFinancingCost { get; set; }

        /// <summary>
        /// Annual interest rate.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 151-157 - Field: Annual Interest Rate 
        /// </summary>
        /// <value>Annual interest rate.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 151-157 - Field: Annual Interest Rate </value>
        [DataMember(Name="annualInterestRate", EmitDefaultValue=false)]
        public string AnnualInterestRate { get; set; }

        /// <summary>
        /// Expenses charged by the issuer to fund the installment payments.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 64-75 - Field: Total Expenses 
        /// </summary>
        /// <value>Expenses charged by the issuer to fund the installment payments.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 64-75 - Field: Total Expenses </value>
        [DataMember(Name="expenses", EmitDefaultValue=false)]
        public string Expenses { get; set; }

        /// <summary>
        /// Expenses divided by the amount funded.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 76-79 - Field: Percent of Total Expenses 
        /// </summary>
        /// <value>Expenses divided by the amount funded.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 76-79 - Field: Percent of Total Expenses </value>
        [DataMember(Name="expensesPercentage", EmitDefaultValue=false)]
        public string ExpensesPercentage { get; set; }

        /// <summary>
        /// Fees charged by the issuer to fund the installment payments.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 80-91 - Field: Total Fees 
        /// </summary>
        /// <value>Fees charged by the issuer to fund the installment payments.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 80-91 - Field: Total Fees </value>
        [DataMember(Name="fees", EmitDefaultValue=false)]
        public string Fees { get; set; }

        /// <summary>
        /// Fees divided by the amount funded.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for Crediario installment payments in Brazil on CyberSource through VisaNet.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 92-95 - Field: Percent of Total Fees 
        /// </summary>
        /// <value>Fees divided by the amount funded.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for Crediario installment payments in Brazil on CyberSource through VisaNet.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 92-95 - Field: Percent of Total Fees </value>
        [DataMember(Name="feesPercentage", EmitDefaultValue=false)]
        public string FeesPercentage { get; set; }

        /// <summary>
        /// Insurance charged by the issuer to fund the installment payments.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 112-123 - Field: Total Insurance 
        /// </summary>
        /// <value>Insurance charged by the issuer to fund the installment payments.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 112-123 - Field: Total Insurance </value>
        [DataMember(Name="insurance", EmitDefaultValue=false)]
        public string Insurance { get; set; }

        /// <summary>
        /// Insurance costs divided by the amount funded.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 124-127 - Field: Percent Of Total Insurance 
        /// </summary>
        /// <value>Insurance costs divided by the amount funded.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 124-127 - Field: Percent Of Total Insurance </value>
        [DataMember(Name="insurancePercentage", EmitDefaultValue=false)]
        public string InsurancePercentage { get; set; }

        /// <summary>
        /// Monthly interest rate.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 144-150 - Field: Monthly Interest Rate 
        /// </summary>
        /// <value>Monthly interest rate.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 144-150 - Field: Monthly Interest Rate </value>
        [DataMember(Name="monthlyInterestRate", EmitDefaultValue=false)]
        public string MonthlyInterestRate { get; set; }

        /// <summary>
        /// Taxes collected by the issuer to fund the installment payments.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 96-107 - Field: Total Taxes 
        /// </summary>
        /// <value>Taxes collected by the issuer to fund the installment payments.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 96-107 - Field: Total Taxes </value>
        [DataMember(Name="taxes", EmitDefaultValue=false)]
        public string Taxes { get; set; }

        /// <summary>
        /// Taxes divided by the amount funded.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 108-111 - Field: Percent of Total Taxes 
        /// </summary>
        /// <value>Taxes divided by the amount funded.  For example: - A value of 1.0 specifies 1%. - A value of 4.0 specifies 4%.  This field is included in the authorization reply for the Crediario eligibility request when the issuer approves the cardholder&#39;s request for Crediario installment payments in Brazil. See Installment Payments on CyberSource through VisaNet.  This field is supported only for &#x60;Crediario&#x60; installment payments in Brazil on **CyberSource through VisaNet**.  The value for this field corresponds to the following data in the TC 33 capture file1: - Record: CP01 TCR9 - Position: 108-111 - Field: Percent of Total Taxes </value>
        [DataMember(Name="taxesPercentage", EmitDefaultValue=false)]
        public string TaxesPercentage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Ptsv2paymentsidcapturesInstallmentInformation {\n");
            sb.Append("  FirstInstallmentDate: ").Append(FirstInstallmentDate).Append("\n");
            sb.Append("  InvoiceData: ").Append(InvoiceData).Append("\n");
            sb.Append("  PaymentType: ").Append(PaymentType).Append("\n");
            sb.Append("  AdditionalCosts: ").Append(AdditionalCosts).Append("\n");
            sb.Append("  AdditionalCostsPercentage: ").Append(AdditionalCostsPercentage).Append("\n");
            sb.Append("  AmountFunded: ").Append(AmountFunded).Append("\n");
            sb.Append("  AmountRequestedPercentage: ").Append(AmountRequestedPercentage).Append("\n");
            sb.Append("  AnnualFinancingCost: ").Append(AnnualFinancingCost).Append("\n");
            sb.Append("  AnnualInterestRate: ").Append(AnnualInterestRate).Append("\n");
            sb.Append("  Expenses: ").Append(Expenses).Append("\n");
            sb.Append("  ExpensesPercentage: ").Append(ExpensesPercentage).Append("\n");
            sb.Append("  Fees: ").Append(Fees).Append("\n");
            sb.Append("  FeesPercentage: ").Append(FeesPercentage).Append("\n");
            sb.Append("  Insurance: ").Append(Insurance).Append("\n");
            sb.Append("  InsurancePercentage: ").Append(InsurancePercentage).Append("\n");
            sb.Append("  MonthlyInterestRate: ").Append(MonthlyInterestRate).Append("\n");
            sb.Append("  Taxes: ").Append(Taxes).Append("\n");
            sb.Append("  TaxesPercentage: ").Append(TaxesPercentage).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as Ptsv2paymentsidcapturesInstallmentInformation);
        }

        /// <summary>
        /// Returns true if Ptsv2paymentsidcapturesInstallmentInformation instances are equal
        /// </summary>
        /// <param name="other">Instance of Ptsv2paymentsidcapturesInstallmentInformation to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Ptsv2paymentsidcapturesInstallmentInformation other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.FirstInstallmentDate == other.FirstInstallmentDate ||
                    this.FirstInstallmentDate != null &&
                    this.FirstInstallmentDate.Equals(other.FirstInstallmentDate)
                ) && 
                (
                    this.InvoiceData == other.InvoiceData ||
                    this.InvoiceData != null &&
                    this.InvoiceData.Equals(other.InvoiceData)
                ) && 
                (
                    this.PaymentType == other.PaymentType ||
                    this.PaymentType != null &&
                    this.PaymentType.Equals(other.PaymentType)
                ) && 
                (
                    this.AdditionalCosts == other.AdditionalCosts ||
                    this.AdditionalCosts != null &&
                    this.AdditionalCosts.Equals(other.AdditionalCosts)
                ) && 
                (
                    this.AdditionalCostsPercentage == other.AdditionalCostsPercentage ||
                    this.AdditionalCostsPercentage != null &&
                    this.AdditionalCostsPercentage.Equals(other.AdditionalCostsPercentage)
                ) && 
                (
                    this.AmountFunded == other.AmountFunded ||
                    this.AmountFunded != null &&
                    this.AmountFunded.Equals(other.AmountFunded)
                ) && 
                (
                    this.AmountRequestedPercentage == other.AmountRequestedPercentage ||
                    this.AmountRequestedPercentage != null &&
                    this.AmountRequestedPercentage.Equals(other.AmountRequestedPercentage)
                ) && 
                (
                    this.AnnualFinancingCost == other.AnnualFinancingCost ||
                    this.AnnualFinancingCost != null &&
                    this.AnnualFinancingCost.Equals(other.AnnualFinancingCost)
                ) && 
                (
                    this.AnnualInterestRate == other.AnnualInterestRate ||
                    this.AnnualInterestRate != null &&
                    this.AnnualInterestRate.Equals(other.AnnualInterestRate)
                ) && 
                (
                    this.Expenses == other.Expenses ||
                    this.Expenses != null &&
                    this.Expenses.Equals(other.Expenses)
                ) && 
                (
                    this.ExpensesPercentage == other.ExpensesPercentage ||
                    this.ExpensesPercentage != null &&
                    this.ExpensesPercentage.Equals(other.ExpensesPercentage)
                ) && 
                (
                    this.Fees == other.Fees ||
                    this.Fees != null &&
                    this.Fees.Equals(other.Fees)
                ) && 
                (
                    this.FeesPercentage == other.FeesPercentage ||
                    this.FeesPercentage != null &&
                    this.FeesPercentage.Equals(other.FeesPercentage)
                ) && 
                (
                    this.Insurance == other.Insurance ||
                    this.Insurance != null &&
                    this.Insurance.Equals(other.Insurance)
                ) && 
                (
                    this.InsurancePercentage == other.InsurancePercentage ||
                    this.InsurancePercentage != null &&
                    this.InsurancePercentage.Equals(other.InsurancePercentage)
                ) && 
                (
                    this.MonthlyInterestRate == other.MonthlyInterestRate ||
                    this.MonthlyInterestRate != null &&
                    this.MonthlyInterestRate.Equals(other.MonthlyInterestRate)
                ) && 
                (
                    this.Taxes == other.Taxes ||
                    this.Taxes != null &&
                    this.Taxes.Equals(other.Taxes)
                ) && 
                (
                    this.TaxesPercentage == other.TaxesPercentage ||
                    this.TaxesPercentage != null &&
                    this.TaxesPercentage.Equals(other.TaxesPercentage)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.FirstInstallmentDate != null)
                    hash = hash * 59 + this.FirstInstallmentDate.GetHashCode();
                if (this.InvoiceData != null)
                    hash = hash * 59 + this.InvoiceData.GetHashCode();
                if (this.PaymentType != null)
                    hash = hash * 59 + this.PaymentType.GetHashCode();
                if (this.AdditionalCosts != null)
                    hash = hash * 59 + this.AdditionalCosts.GetHashCode();
                if (this.AdditionalCostsPercentage != null)
                    hash = hash * 59 + this.AdditionalCostsPercentage.GetHashCode();
                if (this.AmountFunded != null)
                    hash = hash * 59 + this.AmountFunded.GetHashCode();
                if (this.AmountRequestedPercentage != null)
                    hash = hash * 59 + this.AmountRequestedPercentage.GetHashCode();
                if (this.AnnualFinancingCost != null)
                    hash = hash * 59 + this.AnnualFinancingCost.GetHashCode();
                if (this.AnnualInterestRate != null)
                    hash = hash * 59 + this.AnnualInterestRate.GetHashCode();
                if (this.Expenses != null)
                    hash = hash * 59 + this.Expenses.GetHashCode();
                if (this.ExpensesPercentage != null)
                    hash = hash * 59 + this.ExpensesPercentage.GetHashCode();
                if (this.Fees != null)
                    hash = hash * 59 + this.Fees.GetHashCode();
                if (this.FeesPercentage != null)
                    hash = hash * 59 + this.FeesPercentage.GetHashCode();
                if (this.Insurance != null)
                    hash = hash * 59 + this.Insurance.GetHashCode();
                if (this.InsurancePercentage != null)
                    hash = hash * 59 + this.InsurancePercentage.GetHashCode();
                if (this.MonthlyInterestRate != null)
                    hash = hash * 59 + this.MonthlyInterestRate.GetHashCode();
                if (this.Taxes != null)
                    hash = hash * 59 + this.Taxes.GetHashCode();
                if (this.TaxesPercentage != null)
                    hash = hash * 59 + this.TaxesPercentage.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
