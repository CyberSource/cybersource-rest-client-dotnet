/* 
 * CyberSource Merged Spec
 *
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = CyberSource.Client.SwaggerDateConverter;

namespace CyberSource.Model
{
    /// <summary>
    /// DmConfigThirdpartyProvider
    /// </summary>
    [DataContract]
    public partial class DmConfigThirdpartyProvider :  IEquatable<DmConfigThirdpartyProvider>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DmConfigThirdpartyProvider" /> class.
        /// </summary>
        /// <param name="Accurint">Accurint.</param>
        /// <param name="Credilink">Credilink.</param>
        /// <param name="Ekata">Ekata.</param>
        /// <param name="Emailage">Emailage.</param>
        /// <param name="Perseuss">Perseuss.</param>
        /// <param name="Signifyd">Signifyd.</param>
        /// <param name="Targus">Targus.</param>
        public DmConfigThirdpartyProvider(DmConfigThirdpartyProviderAccurint Accurint = default(DmConfigThirdpartyProviderAccurint), DmConfigThirdpartyProviderCredilink Credilink = default(DmConfigThirdpartyProviderCredilink), DmConfigThirdpartyProviderEkata Ekata = default(DmConfigThirdpartyProviderEkata), DmConfigThirdpartyProviderEmailage Emailage = default(DmConfigThirdpartyProviderEmailage), DmConfigThirdpartyProviderPerseuss Perseuss = default(DmConfigThirdpartyProviderPerseuss), DmConfigThirdpartyProviderSignifyd Signifyd = default(DmConfigThirdpartyProviderSignifyd), DmConfigThirdpartyProviderTargus Targus = default(DmConfigThirdpartyProviderTargus))
        {
            this.Accurint = Accurint;
            this.Credilink = Credilink;
            this.Ekata = Ekata;
            this.Emailage = Emailage;
            this.Perseuss = Perseuss;
            this.Signifyd = Signifyd;
            this.Targus = Targus;
        }
        
        /// <summary>
        /// Gets or Sets Accurint
        /// </summary>
        [DataMember(Name="accurint", EmitDefaultValue=false)]
        public DmConfigThirdpartyProviderAccurint Accurint { get; set; }

        /// <summary>
        /// Gets or Sets Credilink
        /// </summary>
        [DataMember(Name="credilink", EmitDefaultValue=false)]
        public DmConfigThirdpartyProviderCredilink Credilink { get; set; }

        /// <summary>
        /// Gets or Sets Ekata
        /// </summary>
        [DataMember(Name="ekata", EmitDefaultValue=false)]
        public DmConfigThirdpartyProviderEkata Ekata { get; set; }

        /// <summary>
        /// Gets or Sets Emailage
        /// </summary>
        [DataMember(Name="emailage", EmitDefaultValue=false)]
        public DmConfigThirdpartyProviderEmailage Emailage { get; set; }

        /// <summary>
        /// Gets or Sets Perseuss
        /// </summary>
        [DataMember(Name="perseuss", EmitDefaultValue=false)]
        public DmConfigThirdpartyProviderPerseuss Perseuss { get; set; }

        /// <summary>
        /// Gets or Sets Signifyd
        /// </summary>
        [DataMember(Name="signifyd", EmitDefaultValue=false)]
        public DmConfigThirdpartyProviderSignifyd Signifyd { get; set; }

        /// <summary>
        /// Gets or Sets Targus
        /// </summary>
        [DataMember(Name="targus", EmitDefaultValue=false)]
        public DmConfigThirdpartyProviderTargus Targus { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DmConfigThirdpartyProvider {\n");
            sb.Append("  Accurint: ").Append(Accurint).Append("\n");
            sb.Append("  Credilink: ").Append(Credilink).Append("\n");
            sb.Append("  Ekata: ").Append(Ekata).Append("\n");
            sb.Append("  Emailage: ").Append(Emailage).Append("\n");
            sb.Append("  Perseuss: ").Append(Perseuss).Append("\n");
            sb.Append("  Signifyd: ").Append(Signifyd).Append("\n");
            sb.Append("  Targus: ").Append(Targus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as DmConfigThirdpartyProvider);
        }

        /// <summary>
        /// Returns true if DmConfigThirdpartyProvider instances are equal
        /// </summary>
        /// <param name="other">Instance of DmConfigThirdpartyProvider to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DmConfigThirdpartyProvider other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Accurint == other.Accurint ||
                    this.Accurint != null &&
                    this.Accurint.Equals(other.Accurint)
                ) && 
                (
                    this.Credilink == other.Credilink ||
                    this.Credilink != null &&
                    this.Credilink.Equals(other.Credilink)
                ) && 
                (
                    this.Ekata == other.Ekata ||
                    this.Ekata != null &&
                    this.Ekata.Equals(other.Ekata)
                ) && 
                (
                    this.Emailage == other.Emailage ||
                    this.Emailage != null &&
                    this.Emailage.Equals(other.Emailage)
                ) && 
                (
                    this.Perseuss == other.Perseuss ||
                    this.Perseuss != null &&
                    this.Perseuss.Equals(other.Perseuss)
                ) && 
                (
                    this.Signifyd == other.Signifyd ||
                    this.Signifyd != null &&
                    this.Signifyd.Equals(other.Signifyd)
                ) && 
                (
                    this.Targus == other.Targus ||
                    this.Targus != null &&
                    this.Targus.Equals(other.Targus)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Accurint != null)
                    hash = hash * 59 + this.Accurint.GetHashCode();
                if (this.Credilink != null)
                    hash = hash * 59 + this.Credilink.GetHashCode();
                if (this.Ekata != null)
                    hash = hash * 59 + this.Ekata.GetHashCode();
                if (this.Emailage != null)
                    hash = hash * 59 + this.Emailage.GetHashCode();
                if (this.Perseuss != null)
                    hash = hash * 59 + this.Perseuss.GetHashCode();
                if (this.Signifyd != null)
                    hash = hash * 59 + this.Signifyd.GetHashCode();
                if (this.Targus != null)
                    hash = hash * 59 + this.Targus.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
