/* 
 * CyberSource Merged Spec
 *
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = CyberSource.Client.SwaggerDateConverter;

namespace CyberSource.Model
{
    /// <summary>
    /// InlineResponse401Fields
    /// </summary>
    [DataContract]
    public partial class InlineResponse401Fields :  IEquatable<InlineResponse401Fields>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse401Fields" /> class.
        /// </summary>
        /// <param name="Path">Path.</param>
        /// <param name="Message">Message.</param>
        /// <param name="LocalizationKey">Valid Values:   * cybsapi.ondemand.batch.email.null .</param>
        public InlineResponse401Fields(string Path = default(string), string Message = default(string), string LocalizationKey = default(string))
        {
            this.Path = Path;
            this.Message = Message;
            this.LocalizationKey = LocalizationKey;
        }
        
        /// <summary>
        /// Gets or Sets Path
        /// </summary>
        [DataMember(Name="path", EmitDefaultValue=false)]
        public string Path { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name="message", EmitDefaultValue=false)]
        public string Message { get; set; }

        /// <summary>
        /// Valid Values:   * cybsapi.ondemand.batch.email.null 
        /// </summary>
        /// <value>Valid Values:   * cybsapi.ondemand.batch.email.null </value>
        [DataMember(Name="localizationKey", EmitDefaultValue=false)]
        public string LocalizationKey { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse401Fields {\n");
            sb.Append("  Path: ").Append(Path).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  LocalizationKey: ").Append(LocalizationKey).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as InlineResponse401Fields);
        }

        /// <summary>
        /// Returns true if InlineResponse401Fields instances are equal
        /// </summary>
        /// <param name="other">Instance of InlineResponse401Fields to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse401Fields other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Path == other.Path ||
                    this.Path != null &&
                    this.Path.Equals(other.Path)
                ) && 
                (
                    this.Message == other.Message ||
                    this.Message != null &&
                    this.Message.Equals(other.Message)
                ) && 
                (
                    this.LocalizationKey == other.LocalizationKey ||
                    this.LocalizationKey != null &&
                    this.LocalizationKey.Equals(other.LocalizationKey)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Path != null)
                    hash = hash * 59 + this.Path.GetHashCode();
                if (this.Message != null)
                    hash = hash * 59 + this.Message.GetHashCode();
                if (this.LocalizationKey != null)
                    hash = hash * 59 + this.LocalizationKey.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
