/* 
 * CyberSource Merged Spec
 *
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CyberSource.Api;
using CyberSource.Model;
using CyberSource.Client;
using System.Reflection;

namespace CyberSource.Test
{
    /// <summary>
    ///  Class for testing Riskv1authenticationsOrderInformationLineItems
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class Riskv1authenticationsOrderInformationLineItemsTests
    {
        // TODO uncomment below to declare an instance variable for Riskv1authenticationsOrderInformationLineItems
        //private Riskv1authenticationsOrderInformationLineItems instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Riskv1authenticationsOrderInformationLineItems
            //instance = new Riskv1authenticationsOrderInformationLineItems();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Riskv1authenticationsOrderInformationLineItems
        /// </summary>
        [Test]
        public void Riskv1authenticationsOrderInformationLineItemsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Riskv1authenticationsOrderInformationLineItems
            //Assert.IsInstanceOfType<Riskv1authenticationsOrderInformationLineItems> (instance, "variable 'instance' is a Riskv1authenticationsOrderInformationLineItems");
        }

        /// <summary>
        /// Test the property 'TotalAmount'
        /// </summary>
        [Test]
        public void TotalAmountTest()
        {
            // TODO unit test for the property 'TotalAmount'
        }
        /// <summary>
        /// Test the property 'UnitPrice'
        /// </summary>
        [Test]
        public void UnitPriceTest()
        {
            // TODO unit test for the property 'UnitPrice'
        }
        /// <summary>
        /// Test the property 'Quantity'
        /// </summary>
        [Test]
        public void QuantityTest()
        {
            // TODO unit test for the property 'Quantity'
        }
        /// <summary>
        /// Test the property 'GiftCardCurrency'
        /// </summary>
        [Test]
        public void GiftCardCurrencyTest()
        {
            // TODO unit test for the property 'GiftCardCurrency'
        }
        /// <summary>
        /// Test the property 'ProductSKU'
        /// </summary>
        [Test]
        public void ProductSKUTest()
        {
            // TODO unit test for the property 'ProductSKU'
        }
        /// <summary>
        /// Test the property 'ProductDescription'
        /// </summary>
        [Test]
        public void ProductDescriptionTest()
        {
            // TODO unit test for the property 'ProductDescription'
        }
        /// <summary>
        /// Test the property 'ProductName'
        /// </summary>
        [Test]
        public void ProductNameTest()
        {
            // TODO unit test for the property 'ProductName'
        }
        /// <summary>
        /// Test the property 'Passenger'
        /// </summary>
        [Test]
        public void PassengerTest()
        {
            // TODO unit test for the property 'Passenger'
        }
        /// <summary>
        /// Test the property 'ShippingDestinationTypes'
        /// </summary>
        [Test]
        public void ShippingDestinationTypesTest()
        {
            // TODO unit test for the property 'ShippingDestinationTypes'
        }
        /// <summary>
        /// Test the property 'TaxAmount'
        /// </summary>
        [Test]
        public void TaxAmountTest()
        {
            // TODO unit test for the property 'TaxAmount'
        }
        /// <summary>
        /// Test the property 'ShippingAddress1'
        /// </summary>
        [Test]
        public void ShippingAddress1Test()
        {
            // TODO unit test for the property 'ShippingAddress1'
        }
        /// <summary>
        /// Test the property 'ShippingAddress2'
        /// </summary>
        [Test]
        public void ShippingAddress2Test()
        {
            // TODO unit test for the property 'ShippingAddress2'
        }
        /// <summary>
        /// Test the property 'ShippingCity'
        /// </summary>
        [Test]
        public void ShippingCityTest()
        {
            // TODO unit test for the property 'ShippingCity'
        }
        /// <summary>
        /// Test the property 'ShippingCountryCode'
        /// </summary>
        [Test]
        public void ShippingCountryCodeTest()
        {
            // TODO unit test for the property 'ShippingCountryCode'
        }
        /// <summary>
        /// Test the property 'ShippingFirstName'
        /// </summary>
        [Test]
        public void ShippingFirstNameTest()
        {
            // TODO unit test for the property 'ShippingFirstName'
        }
        /// <summary>
        /// Test the property 'ShippingLastName'
        /// </summary>
        [Test]
        public void ShippingLastNameTest()
        {
            // TODO unit test for the property 'ShippingLastName'
        }
        /// <summary>
        /// Test the property 'ShippingMiddleName'
        /// </summary>
        [Test]
        public void ShippingMiddleNameTest()
        {
            // TODO unit test for the property 'ShippingMiddleName'
        }
        /// <summary>
        /// Test the property 'ShippingPhone'
        /// </summary>
        [Test]
        public void ShippingPhoneTest()
        {
            // TODO unit test for the property 'ShippingPhone'
        }
        /// <summary>
        /// Test the property 'ShippingPostalCode'
        /// </summary>
        [Test]
        public void ShippingPostalCodeTest()
        {
            // TODO unit test for the property 'ShippingPostalCode'
        }
        /// <summary>
        /// Test the property 'ShippingState'
        /// </summary>
        [Test]
        public void ShippingStateTest()
        {
            // TODO unit test for the property 'ShippingState'
        }

    }

}
