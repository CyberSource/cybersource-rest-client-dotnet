/* 
 * CyberSource Merged Spec
 *
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = CyberSource.Client.SwaggerDateConverter;

namespace CyberSource.Model
{
    /// <summary>
    /// ReportingV3ConversionDetailsGet200ResponseNotes
    /// </summary>
    [DataContract]
    public partial class ReportingV3ConversionDetailsGet200ResponseNotes :  IEquatable<ReportingV3ConversionDetailsGet200ResponseNotes>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ReportingV3ConversionDetailsGet200ResponseNotes" /> class.
        /// </summary>
        /// <param name="Time">Time of the note added by reviewer.</param>
        /// <param name="AddedBy">Note added by reviewer.</param>
        /// <param name="Comments">Comments given by the reviewer.</param>
        public ReportingV3ConversionDetailsGet200ResponseNotes(DateTime? Time = default(DateTime?), string AddedBy = default(string), string Comments = default(string))
        {
            this.Time = Time;
            this.AddedBy = AddedBy;
            this.Comments = Comments;
        }
        
        /// <summary>
        /// Time of the note added by reviewer
        /// </summary>
        /// <value>Time of the note added by reviewer</value>
        [DataMember(Name="time", EmitDefaultValue=false)]
        public DateTime? Time { get; set; }

        /// <summary>
        /// Note added by reviewer
        /// </summary>
        /// <value>Note added by reviewer</value>
        [DataMember(Name="addedBy", EmitDefaultValue=false)]
        public string AddedBy { get; set; }

        /// <summary>
        /// Comments given by the reviewer
        /// </summary>
        /// <value>Comments given by the reviewer</value>
        [DataMember(Name="comments", EmitDefaultValue=false)]
        public string Comments { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ReportingV3ConversionDetailsGet200ResponseNotes {\n");
            sb.Append("  Time: ").Append(Time).Append("\n");
            sb.Append("  AddedBy: ").Append(AddedBy).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ReportingV3ConversionDetailsGet200ResponseNotes);
        }

        /// <summary>
        /// Returns true if ReportingV3ConversionDetailsGet200ResponseNotes instances are equal
        /// </summary>
        /// <param name="other">Instance of ReportingV3ConversionDetailsGet200ResponseNotes to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ReportingV3ConversionDetailsGet200ResponseNotes other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Time == other.Time ||
                    this.Time != null &&
                    this.Time.Equals(other.Time)
                ) && 
                (
                    this.AddedBy == other.AddedBy ||
                    this.AddedBy != null &&
                    this.AddedBy.Equals(other.AddedBy)
                ) && 
                (
                    this.Comments == other.Comments ||
                    this.Comments != null &&
                    this.Comments.Equals(other.Comments)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Time != null)
                    hash = hash * 59 + this.Time.GetHashCode();
                if (this.AddedBy != null)
                    hash = hash * 59 + this.AddedBy.GetHashCode();
                if (this.Comments != null)
                    hash = hash * 59 + this.Comments.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
