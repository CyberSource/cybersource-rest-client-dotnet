/* 
 * CyberSource Merged Spec
 *
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = CyberSource.Client.SwaggerDateConverter;

namespace CyberSource.Model
{
    /// <summary>
    /// Subscription list
    /// </summary>
    [DataContract]
    public partial class GetAllSubscriptionsResponseSubscriptions :  IEquatable<GetAllSubscriptionsResponseSubscriptions>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetAllSubscriptionsResponseSubscriptions" /> class.
        /// </summary>
        /// <param name="Links">Links.</param>
        /// <param name="Id">An unique identification number generated by Cybersource to identify the submitted request. Returned by all services. It is also appended to the endpoint of the resource. On incremental authorizations, this value with be the same as the identification number returned in the original authorization response. .</param>
        /// <param name="PlanInformation">PlanInformation.</param>
        /// <param name="SubscriptionInformation">SubscriptionInformation.</param>
        /// <param name="PaymentInformation">PaymentInformation.</param>
        /// <param name="OrderInformation">OrderInformation.</param>
        public GetAllSubscriptionsResponseSubscriptions(GetAllSubscriptionsResponseLinks Links = default(GetAllSubscriptionsResponseLinks), string Id = default(string), GetAllSubscriptionsResponsePlanInformation PlanInformation = default(GetAllSubscriptionsResponsePlanInformation), GetAllSubscriptionsResponseSubscriptionInformation SubscriptionInformation = default(GetAllSubscriptionsResponseSubscriptionInformation), GetAllSubscriptionsResponsePaymentInformation PaymentInformation = default(GetAllSubscriptionsResponsePaymentInformation), GetAllSubscriptionsResponseOrderInformation OrderInformation = default(GetAllSubscriptionsResponseOrderInformation))
        {
            this.Links = Links;
            this.Id = Id;
            this.PlanInformation = PlanInformation;
            this.SubscriptionInformation = SubscriptionInformation;
            this.PaymentInformation = PaymentInformation;
            this.OrderInformation = OrderInformation;
        }
        
        /// <summary>
        /// Gets or Sets Links
        /// </summary>
        [DataMember(Name="_links", EmitDefaultValue=false)]
        public GetAllSubscriptionsResponseLinks Links { get; set; }

        /// <summary>
        /// An unique identification number generated by Cybersource to identify the submitted request. Returned by all services. It is also appended to the endpoint of the resource. On incremental authorizations, this value with be the same as the identification number returned in the original authorization response. 
        /// </summary>
        /// <value>An unique identification number generated by Cybersource to identify the submitted request. Returned by all services. It is also appended to the endpoint of the resource. On incremental authorizations, this value with be the same as the identification number returned in the original authorization response. </value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets PlanInformation
        /// </summary>
        [DataMember(Name="planInformation", EmitDefaultValue=false)]
        public GetAllSubscriptionsResponsePlanInformation PlanInformation { get; set; }

        /// <summary>
        /// Gets or Sets SubscriptionInformation
        /// </summary>
        [DataMember(Name="subscriptionInformation", EmitDefaultValue=false)]
        public GetAllSubscriptionsResponseSubscriptionInformation SubscriptionInformation { get; set; }

        /// <summary>
        /// Gets or Sets PaymentInformation
        /// </summary>
        [DataMember(Name="paymentInformation", EmitDefaultValue=false)]
        public GetAllSubscriptionsResponsePaymentInformation PaymentInformation { get; set; }

        /// <summary>
        /// Gets or Sets OrderInformation
        /// </summary>
        [DataMember(Name="orderInformation", EmitDefaultValue=false)]
        public GetAllSubscriptionsResponseOrderInformation OrderInformation { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetAllSubscriptionsResponseSubscriptions {\n");
            sb.Append("  Links: ").Append(Links).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  PlanInformation: ").Append(PlanInformation).Append("\n");
            sb.Append("  SubscriptionInformation: ").Append(SubscriptionInformation).Append("\n");
            sb.Append("  PaymentInformation: ").Append(PaymentInformation).Append("\n");
            sb.Append("  OrderInformation: ").Append(OrderInformation).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as GetAllSubscriptionsResponseSubscriptions);
        }

        /// <summary>
        /// Returns true if GetAllSubscriptionsResponseSubscriptions instances are equal
        /// </summary>
        /// <param name="other">Instance of GetAllSubscriptionsResponseSubscriptions to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetAllSubscriptionsResponseSubscriptions other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Links == other.Links ||
                    this.Links != null &&
                    this.Links.Equals(other.Links)
                ) && 
                (
                    this.Id == other.Id ||
                    this.Id != null &&
                    this.Id.Equals(other.Id)
                ) && 
                (
                    this.PlanInformation == other.PlanInformation ||
                    this.PlanInformation != null &&
                    this.PlanInformation.Equals(other.PlanInformation)
                ) && 
                (
                    this.SubscriptionInformation == other.SubscriptionInformation ||
                    this.SubscriptionInformation != null &&
                    this.SubscriptionInformation.Equals(other.SubscriptionInformation)
                ) && 
                (
                    this.PaymentInformation == other.PaymentInformation ||
                    this.PaymentInformation != null &&
                    this.PaymentInformation.Equals(other.PaymentInformation)
                ) && 
                (
                    this.OrderInformation == other.OrderInformation ||
                    this.OrderInformation != null &&
                    this.OrderInformation.Equals(other.OrderInformation)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Links != null)
                    hash = hash * 59 + this.Links.GetHashCode();
                if (this.Id != null)
                    hash = hash * 59 + this.Id.GetHashCode();
                if (this.PlanInformation != null)
                    hash = hash * 59 + this.PlanInformation.GetHashCode();
                if (this.SubscriptionInformation != null)
                    hash = hash * 59 + this.SubscriptionInformation.GetHashCode();
                if (this.PaymentInformation != null)
                    hash = hash * 59 + this.PaymentInformation.GetHashCode();
                if (this.OrderInformation != null)
                    hash = hash * 59 + this.OrderInformation.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
