/* 
 * CyberSource Merged Spec
 *
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CyberSource.Api;
using CyberSource.Model;
using CyberSource.Client;
using System.Reflection;

namespace CyberSource.Test
{
    /// <summary>
    ///  Class for testing UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformationTests
    {
        // TODO uncomment below to declare an instance variable for UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation
        //private UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation
            //instance = new UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation
        /// </summary>
        [Test]
        public void UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformationInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation
            //Assert.IsInstanceOfType<UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation> (instance, "variable 'instance' is a UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation");
        }

        /// <summary>
        /// Test the property 'FirstName'
        /// </summary>
        [Test]
        public void FirstNameTest()
        {
            // TODO unit test for the property 'FirstName'
        }
        /// <summary>
        /// Test the property 'MiddleName'
        /// </summary>
        [Test]
        public void MiddleNameTest()
        {
            // TODO unit test for the property 'MiddleName'
        }
        /// <summary>
        /// Test the property 'LastName'
        /// </summary>
        [Test]
        public void LastNameTest()
        {
            // TODO unit test for the property 'LastName'
        }
        /// <summary>
        /// Test the property 'BirthDate'
        /// </summary>
        [Test]
        public void BirthDateTest()
        {
            // TODO unit test for the property 'BirthDate'
        }
        /// <summary>
        /// Test the property 'IsPrimary'
        /// </summary>
        [Test]
        public void IsPrimaryTest()
        {
            // TODO unit test for the property 'IsPrimary'
        }
        /// <summary>
        /// Test the property 'HasSignificantResponsibility'
        /// </summary>
        [Test]
        public void HasSignificantResponsibilityTest()
        {
            // TODO unit test for the property 'HasSignificantResponsibility'
        }
        /// <summary>
        /// Test the property 'OwnerDirector'
        /// </summary>
        [Test]
        public void OwnerDirectorTest()
        {
            // TODO unit test for the property 'OwnerDirector'
        }
        /// <summary>
        /// Test the property 'NationalId'
        /// </summary>
        [Test]
        public void NationalIdTest()
        {
            // TODO unit test for the property 'NationalId'
        }
        /// <summary>
        /// Test the property 'IdCountry'
        /// </summary>
        [Test]
        public void IdCountryTest()
        {
            // TODO unit test for the property 'IdCountry'
        }
        /// <summary>
        /// Test the property 'PassportNumber'
        /// </summary>
        [Test]
        public void PassportNumberTest()
        {
            // TODO unit test for the property 'PassportNumber'
        }
        /// <summary>
        /// Test the property 'PassportCountry'
        /// </summary>
        [Test]
        public void PassportCountryTest()
        {
            // TODO unit test for the property 'PassportCountry'
        }
        /// <summary>
        /// Test the property 'JobTitle'
        /// </summary>
        [Test]
        public void JobTitleTest()
        {
            // TODO unit test for the property 'JobTitle'
        }
        /// <summary>
        /// Test the property 'OwnershipPercentage'
        /// </summary>
        [Test]
        public void OwnershipPercentageTest()
        {
            // TODO unit test for the property 'OwnershipPercentage'
        }
        /// <summary>
        /// Test the property 'Nationality'
        /// </summary>
        [Test]
        public void NationalityTest()
        {
            // TODO unit test for the property 'Nationality'
        }
        /// <summary>
        /// Test the property 'DueDiligenceRequired'
        /// </summary>
        [Test]
        public void DueDiligenceRequiredTest()
        {
            // TODO unit test for the property 'DueDiligenceRequired'
        }
        /// <summary>
        /// Test the property 'PhoneNumberCountryCode'
        /// </summary>
        [Test]
        public void PhoneNumberCountryCodeTest()
        {
            // TODO unit test for the property 'PhoneNumberCountryCode'
        }
        /// <summary>
        /// Test the property 'PhoneNumber'
        /// </summary>
        [Test]
        public void PhoneNumberTest()
        {
            // TODO unit test for the property 'PhoneNumber'
        }
        /// <summary>
        /// Test the property 'Email'
        /// </summary>
        [Test]
        public void EmailTest()
        {
            // TODO unit test for the property 'Email'
        }
        /// <summary>
        /// Test the property 'Address'
        /// </summary>
        [Test]
        public void AddressTest()
        {
            // TODO unit test for the property 'Address'
        }

    }

}
